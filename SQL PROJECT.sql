-- 1. List all tracks along with their names and unit prices.

SELECT * FROM "Track";

SELECT "Name", "UnitPrice"
FROM "Track";

-- 2. Retrieve all customer names and their corresponding countries.

SELECT * FROM "Customer";

SELECT "FirstName", "LastName", "Country"
FROM "Customer";

-- 3. Find the total number of tracks in the database.

SELECT * FROM "Track";

SELECT COUNT(*) "Name"
FROM "Track";

-- 4. List all albums along with the name of the artist.

SELECT * FROM "Album";
SELECT * FROM "Artist";

SELECT ALb."Title", Art."Name"
FROM "Album" AS Alb
INNER JOIN "Artist" AS Art
ON Alb."Artistid" = Art."Artistid";

-- 5. Get all invoice dates and total amounts for a specific customer (e.g., customer named "Frank").

SELECT * FROM "Invoice";

SELECT Inv."InvoiceDate", Inv."Total", Cus."FirstName"
FROM "Invoice" AS Inv
INNER JOIN "Customer" AS Cus
ON Inv."Customerid" = Cus."Customerid"
where Cus."FirstName" = 'Frank';

-- 6. Show the names of playlists and how many tracks each one contains.

SELECT * FROM "Playlist";
SELECT * FROM "PlaylistTrack";
SELECT * FROM "Track";

SELECT Pl."Name",  COUNT(Tr."Trackid") as Total_Counts
FROM "Playlist" AS Pl
INNER JOIN "PlaylistTrack" AS Plt
ON Pl."Playlistid" = Plt."Playlistid"
INNER JOIN "Track" AS Tr
ON Plt."Trackid" = Tr."Trackid"
GROUP BY Pl."Name"
ORDER BY Total_Counts DESC;


-- 7. List all employees and their job titles.

SELECT * FROM "Employee";

SELECT "FirstName", "LastName", "Title"
FROM "Employee";

-- 8. Find the names of all genres in the database.

SELECT * FROM "Genre";

SELECT "Name" FROM "Genre";

-- 9. List the top 5 most expensive tracks by unit price.

SELECT * FROM "Track";

SELECT "Name", "UnitPrice"
FROM "Track"
ORDER BY "UnitPrice" DESC
LIMIT 5;


-- 10. Get the total duration in milliseconds of all tracks.

SELECT * FROM "Track";

SELECT "Name", "Milliseconds"
FROM "Track"
ORDER BY "Milliseconds" DESC;

-- 11. Show all tracks with genre name, media type, and composer.

SELECT * FROM "Genre";
SELECT * FROM "MediaType";
sELECT * FROM  "Track";

SELECT Gn."Name", Mt."Name", Tr."Composer"
FROM "Genre" AS Gn
INNER JOIN "Track" AS Tr
ON Gn."Genreid" = Tr."Genreid"
INNER JOIN "MediaType" AS Mt
ON Tr."MediaTypeid" = Mt."MediaTypeid";


-- 12. Find the total sales per country by summing invoice totals.

SELECT * FROM "Invoice";

SELECT "BillingCountry", SUM("Total") Total_sales
FROM "Invoice"
GROUP BY "BillingCountry"
ORDER BY Total_sales DESC;

-- 13. Find the average unit price of tracks grouped by genre.

SELECT * FROM "Track";
SELECT * FROM "Genre";

SELECT Ge."Name", AVG(Tr."UnitPrice") AS Average_unit_Price
FROM "Track" AS Tr
INNER JOIN "Genre" AS Ge
ON Tr."Genreid" = Ge."Genreid"
GROUP BY Ge."Name";

-- 14. List all albums with the count of tracks in each album.

SELECT * FROM "Album";
SELECT * FROM "Track";

SELECT Al."Title", COUNT(Tr."Name") AS Total_Tracks
FROM "Album" AS Al
INNER JOIN "Track" AS Tr
ON Al."Albumid" = Tr."Albumid"
GROUP BY Al."Title"
ORDER BY Total_Tracks DESC;

-- 15. . Find the top 3 most purchased tracks by total quantity sold.

SELECT * FROM "Track";
SELECT * FROM "InvoiceLine";

SELECT Tr."Name", COUNT(Il."Quantity") AS Total_Quantity
FROM "Track" as Tr
INNER JOIN "InvoiceLine" AS Il
ON Tr."Trackid" = Il."Trackid"
GROUP BY Tr."Name"
ORDER BY Total_Quantity DESC
LIMIT 3;


-- 16. Get the total revenue generated by each genre.

SELECT * FROM "Genre";
SELECT * FROM "Track";

SELECT Ge."Name", SUM(Tr."UnitPrice") AS Total_revenue
FROM "Genre" AS Ge
INNER JOIN "Track" AS Tr
ON Ge."Genreid" = Tr."Genreid"
GROUP BY Ge."Name"
ORDER BY Total_revenue DESC;



